//Responsifies any single property across a range of named or numeric breakpoints
@mixin responsive($property, $size-breakpoint-lists...){
  $named-breakpoints: "xxs" 310px, "xs" 550px, "s" 770px, "m" 1180px, "l" 1420px, "xl" 1860px, "xxl" 2200px !default; 
  
	@each $size-breakpoint-list in $size-breakpoint-lists{
		$value: nth($size-breakpoint-list, 1);
		$breakpoint: nth($size-breakpoint-list, 2);

    @if type-of($breakpoint) == number{
      @media screen and (min-width: $breakpoint) {
        #{$property}: #{$value};
      }
    }
    // If using named breakpoint
    @else{
      $stringMatch: false;
      @each $named-breakpoint in $named-breakpoints{
        // If string match, apply property value pair at named breakpoint match
        @if nth($named-breakpoint, 1) == $breakpoint{
          $stringMatch: true;
          @media screen and (min-width: nth($named-breakpoint, 2)) {
            #{$property}: #{$value};
          }
        }
      }
      @if(stringMatch == false){
        @warn "Couldn't find a named breakpoint: " + $breakpoint;
      }
    }
	}
}

// Applies code at resolutions above a given breakpoint, based on a number or list of named breakpoints
@mixin breakpoint($breakpoint){
  $named-breakpoints: "xxs" 310px, "xs" 550px, "s" 770px, "m" 1180px, "l" 1420px, "xl" 1860px, "xxl" 2200px !default; 
  
  @if type-of($breakpoint) == number {
    @media only screen and (min-width: $breakpoint) { @content; }
  }
  @else{
    $stringMatch: false;
    @each $named-breakpoint in $named-breakpoints{
      // If string match
      @if nth($named-breakpoint, 1) == $breakpoint{
        $stringMatch: true;
        @media only screen and (min-width: nth($named-breakpoint, 2)) { @content; }
      }
    }
    @if($stringMatch == false){
      @warn "Couldn't find a named breakpoint: " + $breakpoint;
    }
  }
}